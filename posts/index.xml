<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>文章 on SPPanLogs</title>
    <link>https://sppan24.github.io/posts/</link>
    <description>Recent content in 文章 on SPPanLogs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>sppan24@163.com (SPPan)</managingEditor>
    <webMaster>sppan24@163.com (SPPan)</webMaster>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Wed, 21 Apr 2021 10:11:39 +0800</lastBuildDate>
    <sy:updatePeriod>monthly</sy:updatePeriod>
    
        <atom:link href="https://sppan24.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>一棵特立独行的树</title>
        <link>https://sppan24.github.io/posts/other/%E4%B8%80%E6%A3%B5%E7%89%B9%E7%AB%8B%E7%8B%AC%E8%A1%8C%E7%9A%84%E6%A0%91/</link>
        <pubDate>Wed, 21 Apr 2021 10:11:39 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Wed, 21 Apr 2021 10:11:39 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/other/%E4%B8%80%E6%A3%B5%E7%89%B9%E7%AB%8B%E7%8B%AC%E8%A1%8C%E7%9A%84%E6%A0%91/</guid>
        <description>依稀记得，不知道多久以前的课堂，有一篇课文名字叫做&amp;quot;一棵特立独行的树&amp;quot;，但是对其中的具体内容大体都已经模糊了。在网上搜索</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
          
            
              <category>Other</category>
            
          
        
        
          
            
              <category>Other</category>
            
          
        
        
      </item>
      
      <item>
        <title>正在一点点消失的什么</title>
        <link>https://sppan24.github.io/posts/other/%E6%AD%A3%E5%9C%A8%E4%B8%80%E7%82%B9%E7%82%B9%E6%B6%88%E5%A4%B1%E7%9A%84%E4%BB%80%E4%B9%88/</link>
        <pubDate>Wed, 03 Mar 2021 14:23:29 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Wed, 03 Mar 2021 14:23:29 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/other/%E6%AD%A3%E5%9C%A8%E4%B8%80%E7%82%B9%E7%82%B9%E6%B6%88%E5%A4%B1%E7%9A%84%E4%BB%80%E4%B9%88/</guid>
        <description>现在已经是2021年三月份了，其实今年回来上班以后，一直也没什么事情，摸个鱼划个水，一天就过去了。这周刚开始做需求，不过三下五除二做完了。没</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
          
            
              <category>Other</category>
            
          
        
        
          
            
              <category>Other</category>
            
          
        
        
      </item>
      
      <item>
        <title>CentOS升级openssl版本</title>
        <link>https://sppan24.github.io/posts/linux/centos%E5%8D%87%E7%BA%A7openssl%E7%89%88%E6%9C%AC/</link>
        <pubDate>Tue, 02 Feb 2021 14:32:37 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Tue, 02 Feb 2021 14:32:37 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/linux/centos%E5%8D%87%E7%BA%A7openssl%E7%89%88%E6%9C%AC/</guid>
        <description>CentOS升级openssl版本 openssl是开放源码的，需要自己去下载源码来进行编译安装。以1.0.2k版本为例。 一、下载源码 可以从官</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
          
            
              <category>Linux</category>
            
          
        
        
          
            
              <category>Linux</category>
            
          
        
        
      </item>
      
      <item>
        <title>文件BOM头信息</title>
        <link>https://sppan24.github.io/posts/technology/%E6%96%87%E4%BB%B6bom%E5%A4%B4%E4%BF%A1%E6%81%AF/</link>
        <pubDate>Wed, 06 Jan 2021 17:12:26 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Wed, 06 Jan 2021 17:12:26 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/technology/%E6%96%87%E4%BB%B6bom%E5%A4%B4%E4%BF%A1%E6%81%AF/</guid>
        <description>最近在做CSV文件导出的时候，在Windows下面使用Excel打开总是会出现乱码的情况，需要先将文件转存成GB2312格式才能正常打开，于</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
        
          
            
              <category>Technology</category>
            
          
        
        
      </item>
      
      <item>
        <title>一地鸡毛的中年</title>
        <link>https://sppan24.github.io/posts/other/%E4%B8%80%E5%9C%B0%E9%B8%A1%E6%AF%9B%E7%9A%84%E4%B8%AD%E5%B9%B4/</link>
        <pubDate>Mon, 28 Dec 2020 15:58:04 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Mon, 28 Dec 2020 15:58:04 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/other/%E4%B8%80%E5%9C%B0%E9%B8%A1%E6%AF%9B%E7%9A%84%E4%B8%AD%E5%B9%B4/</guid>
        <description>路虽远，行则将至。事虽难，做则必成。我们只管向前走，也许走着走着花就开了。也许在未来的某天，回首曾经的中年，我们会感慨道：&amp;ldquo;看，</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
          
            
              <category>Other</category>
            
          
        
        
          
            
              <category>Other</category>
            
          
        
        
      </item>
      
      <item>
        <title>Solr清空CORE的数据</title>
        <link>https://sppan24.github.io/posts/solr/solr%E6%B8%85%E7%A9%BAcore%E7%9A%84%E6%95%B0%E6%8D%AE/</link>
        <pubDate>Sun, 22 Mar 2020 22:53:19 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Sun, 22 Mar 2020 22:53:19 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/solr/solr%E6%B8%85%E7%A9%BAcore%E7%9A%84%E6%95%B0%E6%8D%AE/</guid>
        <description>在使用Solr做全文检索的过程中，难免需要清空原有的数据再进行索引的重建，下面介绍了四种清空Solr中指定Core数据的方法。 方式一 基于So</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
          
            
              <category>Solr</category>
            
          
        
        
          
            
              <category>Solr</category>
            
          
        
        
      </item>
      
      <item>
        <title>Linux免密登录配置</title>
        <link>https://sppan24.github.io/posts/linux/linux%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE/</link>
        <pubDate>Sat, 14 Mar 2020 20:42:37 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Sat, 14 Mar 2020 20:42:37 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/linux/linux%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE/</guid>
        <description>一、客户端生成公私钥 使用命令在本地客户端生成公私钥（中间的选项直接一路回车默认即可）。 ssh-keygen 命令默认会在~/.ssh目录下生成如下两个文件。 id_rsa （</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
          
            
              <category>Linux</category>
            
          
        
        
          
            
              <category>Linux</category>
            
          
        
        
      </item>
      
      <item>
        <title>定制自己的IDEA开发工具</title>
        <link>https://sppan24.github.io/posts/soft/%E5%AE%9A%E5%88%B6%E8%87%AA%E5%B7%B1%E7%9A%84idea%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/</link>
        <pubDate>Wed, 01 Jan 2020 22:22:04 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Wed, 01 Jan 2020 22:22:04 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/soft/%E5%AE%9A%E5%88%B6%E8%87%AA%E5%B7%B1%E7%9A%84idea%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/</guid>
        <description>Idea可以说是Java界的开发利器了。如果安装完成后，能对其进行一定的配置，使用起来一定更加得心应手。但是如果喜欢折腾的朋友，经常进行重装</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
          
            
              <category>Soft</category>
            
          
            
              <category>Idea</category>
            
          
        
        
          
            
              <category>Soft</category>
            
          
        
        
      </item>
      
      <item>
        <title>排序算法之基数排序</title>
        <link>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/</link>
        <pubDate>Wed, 11 Sep 2019 11:00:25 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Wed, 11 Sep 2019 11:00:25 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/</guid>
        <description>基数排序算法很特殊，它不需要直接对元素进行相互比较，也不需要将元素相互交换，你需要做的就是对元素进行“分类”。 将所有待比较数值统一为同样的数</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
          
            
              <category>排序算法</category>
            
          
            
              <category>基数排序</category>
            
          
        
        
          
            
              <category>排序算法</category>
            
          
        
        
      </item>
      
      <item>
        <title>排序算法之归并排序</title>
        <link>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</link>
        <pubDate>Wed, 11 Sep 2019 11:00:25 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Wed, 11 Sep 2019 11:00:25 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</guid>
        <description>归并排序是建立在归并操作上的一种有效的排序算法。该算法是采用分治法的一个非常典型的应用。 作为一种典型的分而治之思想的算法应用，归并排序的实现</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
          
            
              <category>排序算法</category>
            
          
            
              <category>归并排序</category>
            
          
        
        
          
            
              <category>排序算法</category>
            
          
        
        
      </item>
      
      <item>
        <title>排序算法之堆排序</title>
        <link>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E5%A0%86%E6%8E%92%E5%BA%8F/</link>
        <pubDate>Mon, 09 Sep 2019 11:00:25 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Mon, 09 Sep 2019 11:00:25 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E5%A0%86%E6%8E%92%E5%BA%8F/</guid>
        <description>堆排序（Heapsort）是指利用堆这种数据结构所设计的一种排序算法。堆积是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
          
            
              <category>排序算法</category>
            
          
            
              <category>堆排序</category>
            
          
        
        
          
            
              <category>排序算法</category>
            
          
        
        
      </item>
      
      <item>
        <title>排序算法之快速排序</title>
        <link>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</link>
        <pubDate>Sun, 08 Sep 2019 11:00:25 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Sun, 08 Sep 2019 11:00:25 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</guid>
        <description>快速排序（Quicksort）是对冒泡排序的一种改进。 通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
          
            
              <category>排序算法</category>
            
          
            
              <category>快速排序</category>
            
          
        
        
          
            
              <category>排序算法</category>
            
          
        
        
      </item>
      
      <item>
        <title>排序算法之希尔排序</title>
        <link>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F/</link>
        <pubDate>Fri, 06 Sep 2019 11:00:25 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Fri, 06 Sep 2019 11:00:25 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F/</guid>
        <description>是简单插入排序经过改进之后的一个更高效的版本，也称为缩小增量排序。 希尔排序是把记录按下标的一定增量分组，对每组使用直接插入排序算法排序； 随着</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
          
            
              <category>排序算法</category>
            
          
            
              <category>希尔排序</category>
            
          
        
        
          
            
              <category>排序算法</category>
            
          
        
        
      </item>
      
      <item>
        <title>排序算法之插入排序</title>
        <link>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</link>
        <pubDate>Fri, 06 Sep 2019 11:00:25 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Fri, 06 Sep 2019 11:00:25 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</guid>
        <description>对欲排序的元素以插入的方式找寻该元素的适当位置，以达到排序的目的。 把n个待排序的元素看成为一个有序表和一个无序表。 开始时有序表中只包含一个元</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
          
            
              <category>排序算法</category>
            
          
            
              <category>插入排序</category>
            
          
        
        
          
            
              <category>排序算法</category>
            
          
        
        
      </item>
      
      <item>
        <title>排序算法之选择排序</title>
        <link>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</link>
        <pubDate>Tue, 03 Sep 2019 11:00:25 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Tue, 03 Sep 2019 11:00:25 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</guid>
        <description>从欲排序的数据中，按指定的规则选出某一元素，再依规定交换位置后达到排序的目的。 一、排序步骤 第一次从 arr[0]~arr[n-1]中选取最小值</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
          
            
              <category>排序算法</category>
            
          
            
              <category>选择排序</category>
            
          
        
        
          
            
              <category>排序算法</category>
            
          
        
        
      </item>
      
      <item>
        <title>排序算法之冒泡排序</title>
        <link>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</link>
        <pubDate>Mon, 02 Sep 2019 11:00:25 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Mon, 02 Sep 2019 11:00:25 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</guid>
        <description>通过对待排序序列从前向后（从下标较小的元素开始）,依次比较相邻元素的值，若发现逆序则交换，使值较大的元素逐渐从前移向后部，就象水底下的气泡一</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
          
            
              <category>排序算法</category>
            
          
            
              <category>冒泡排序</category>
            
          
        
        
          
            
              <category>排序算法</category>
            
          
        
        
      </item>
      
      <item>
        <title>排序算法概述</title>
        <link>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0/</link>
        <pubDate>Tue, 01 Jan 2019 11:00:25 +0800</pubDate>
        <author>sppan24@163.com (SPPan)</author>
        <atom:modified>Tue, 01 Jan 2019 11:00:25 +0800</atom:modified>
        <guid>https://sppan24.github.io/posts/algorithm/sort/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0/</guid>
        <description>1、介绍 排序也称排序算法(Sort Algorithm)，排序是将一组数据，依指定的顺序进行排列的过程。 2、分类 2.1、内部排序 指将需要处理的</description>
        
        <dc:creator>SPPan</dc:creator>
        
        
        
        
          
            
              <category>排序算法</category>
            
          
        
        
          
            
              <category>排序算法</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>